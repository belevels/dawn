{%-liquid
  assign handle = section.settings.title
case handle
when 'como-se-usa'
  assign sectionTitle         = product.metafields.InstruccionesUso.TituloSeccion
  assign sectionShowHeader    = product.metafields.InstruccionesUso.MostrarTitulo
  assign sectionSubtitle      = product.metafields.InstruccionesUso.DescripcionSeccion
  assign sectionImage         = ''
  assign sectionButtonLabel   = product.metafields.InstruccionesUso.PreguntaSeccion
  assign sectionButtonLink    = ''
  
  assign popupAnswer          = product.metafields.InstruccionesUso.RespuestaSeccion
  assign popupIncludes        = product.metafields.InstruccionesUso.IncluyeSeccion
  assign popupIndications     = product.metafields.InstruccionesUso.IndicacionesSeccion

  assign columnTitle          = product.metafields.InstruccionesUso.TituloContenido
  assign columnDescription    = product.metafields.InstruccionesUso.DescripcionContenido
  assign columnImage          = product.metafields.InstruccionesUso.ImagenContenido
  assign columnBadge         = ''
  when 'proceso-mejora'
  assign sectionTitle         = product.metafields.ProcesoMejora.TituloSeccion
  assign sectionShowHeader    = product.metafields.ProcesoMejora.MostrarTitulo
  assign sectionSubtitle      = product.metafields.ProcesoMejora.DescripcionSeccion
  assign sectionImage         = product.metafields.ProcesoMejora.ImagenSeccion
  assign sectionButtonLabel   = ''
  assign sectionButtonLink    = ''
  assign columnTitle          = product.metafields.ProcesoMejora.TituloContenido
  assign columnSubTitle       = product.metafields.ProcesoMejora.SubtituloContenido
  assign columnDescription    = product.metafields.ProcesoMejora.DescripcionContenido
  assign columnImage          = product.metafields.ProcesoMejora.ImagenContenido
  assign columnBadge         = product.metafields.ProcesoMejora.TiempoContenido
  when 'beneficios'
  assign sectionTitle         = product.metafields.Beneficios.TituloSeccion
  assign sectionShowHeader    = product.metafields.Beneficios.MostrarTitulo
  assign sectionSubtitle      = product.metafields.Beneficios.DescripcionSeccion
  assign sectionImage         = ''
  assign sectionButtonLabel   = ''
  assign sectionButtonLink    = ''
  assign columnTitle          = product.metafields.Beneficios.TituloBeneficioPrincipal
  assign columnSubTitle       = ''
  assign columnDescription    = product.metafields.Beneficios.DescripcionBeneficioPrincipal
  assign columnImage          = product.metafields.Beneficios.ImagenBeneficioPrincipal 
  assign columnBadge         = ''
  when 'opiniones-expertos'
  assign sectionTitle         = product.metafields.OpinionesExpertos.TituloSeccion
  assign sectionShowHeader    = product.metafields.OpinionesExpertos.MostrarTitulo
  assign sectionSubtitle      = product.metafields.OpinionesExpertos.DescripcionSeccion
  assign sectionImage         = ''
  assign sectionButtonLabel   = ''
  assign sectionButtonLink    = ''
  assign columnTitle          = product.metafields.OpinionesExpertos.TituloContenido
  assign columnSubTitle       = product.metafields.OpinionesExpertos.SubtituloContenido
  assign columnDescription    = product.metafields.OpinionesExpertos.DescripcionContenido
  assign columnImage          = product.metafields.OpinionesExpertos.ImagenContenido
  assign columnBadge          = ''
  when 'ingredientes'
  assign sectionTitle         = product.metafields.Ingredientes.TituloSeccion
  assign sectionShowHeader    = product.metafields.Ingredientes.MostrarTitulo
  assign sectionSubtitle      = product.metafields.Ingredientes.DescripcionSeccion
  assign sectionImage         = '' 
  assign sectionTitleDowncase = sectionTitle | downcase
  assign sectionButtonLabel   = 'belevels.products.show_more' | t | append: ' ' | append: sectionTitleDowncase
  
  assign sectionButtonLink    = ''
  
  assign popupIngSecTitle     = product.metafields.Ingredientes.TituloIngredienteSecund
  assign popupIngSecDesc      = product.metafields.Ingredientes.DescripcionIngredienteSecund
  assign popupColumnCount     = popupIngSecTitle | size | minus: 1

  assign columnTitle          = product.metafields.Ingredientes.TituloContenido
  assign columnSubTitle       = ''
  assign columnDescription    = product.metafields.Ingredientes.DescripcionContenido
  assign columnImage          = product.metafields.Ingredientes.ImagenContenido
  assign columnBadge         = ''
  else
  assign sectionTitle         = 'Título de la sección'
  assign sectionShowHeader    = 1
  assign sectionSubtitle      = 'Subtítulo de la sección'
  assign sectionButtonLabel   = ''
  assign sectionButtonLink    = ''
  assign columnTitle          = 'Título del ítem'
  assign columnDescription    = 'Descripción del ítem'
  assign columnImage          = ''
endcase 

  assign totalSlides            = columnTitle | size | plus: 0
  assign ColumnCount            = columnTitle | size | minus: 1
-%}
{%- comment -%}
TEST: Be levels - una columna
assign totalSlides = 1
assign ColumnCount = 0
{%- endcomment -%}
{%- if totalSlides > 0 -%}
  {{ 'section-multicolumn.css' | asset_url | stylesheet_tag }}
  <link rel="stylesheet" href="{{ 'component-slider.css' | asset_url }}" media="print" onload="this.media='all'">
  <noscript>{{ 'component-slider.css' | asset_url | stylesheet_tag }}</noscript>
  {{ 'component-slideshow.css' | asset_url | stylesheet_tag }}
  {{ 'be-component-carousel.css' | asset_url | stylesheet_tag }}

  {%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 990px) {
      .slide-{{ section.id }}.multicolumn-list {
        --grid-desktop-horizontal-spacing: {{ section.settings.gap_desktop | times: 1 }}px;
      }
    }

    @media screen and (min-width: 750px) and (max-width: 989px) {
      .slide-{{ section.id }}.multicolumn-list {
        --grid-desktop-horizontal-spacing: inherit;
      }
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
    
  {%- endstyle -%}

  {%- liquid
    assign show_mobile_slider = false
    if section.settings.swipe_on_mobile
      assign show_mobile_slider = true
    endif
  -%}
  {%- comment -%}MOD: Be levels - Agregamos columns_desktop_int y show_desktop_slider {%- endcomment -%}
  {%- liquid
    if totalSlides > section.settings.columns_desktop
      assign columns_desktop_int = section.settings.columns_desktop
    else
      assign columns_desktop_int = totalSlides
    endif

    if columns_desktop_int > 2
      assign  columns_tablet_int = 3 
    else
      assign columns_tablet_int = columns_desktop_int | minus: 1
    endif
    
    assign show_desktop_slider = false
    if section.settings.swipe_on_desktop and totalSlides > columns_desktop_int
    assign show_desktop_slider = true
    endif 

    assign totalSlidesDesktop = totalSlides | minus: columns_desktop_int | plus: 1
    assign totalSlides  = totalSlides
  -%}
  <div class="multicolumn color-{{ section.settings.color_scheme }} gradient{% unless section.settings.background_style == 'none' and settings.text_boxes_border_thickness > 0 or settings.text_boxes_shadow_opacity > 0 %} background-{{ section.settings.background_style }}{% endunless %}{% if sectionTitle == blank %} no-heading{% endif %}">
    <div class="section-{{ section.id }}-padding page-width isolate">
      {%- if sectionTitle or sectionSubtitle -%}
        <div class="title-wrapper title-wrapper--no-top-margin title-wrapper--self-padded-tablet-down{% if section.settings.title_wrapper_alignment == 'center' %} center{% endif %}">
          {%- if sectionTitle and sectionShowHeader == 1 -%}
            <h2 class="title {{ section.settings.heading_size }}">
              {{ sectionTitle | escape }}
            </h2>
          {%- endif -%}
          {%- if sectionSubtitle -%}
            <div class="{{ section.settings.description_style }}">
              {{ sectionSubtitle }}
            </div>
          {%- endif -%}
        </div>
      {%- endif -%}

      {%- if columnTitle or columnDescription or columnImage -%}
        <carousel-component class="slider-mobile-gutter" role="region" aria-roledescription="{{ 'sections.slideshow.carousel' | t }}" aria-label="{{ section.settings.accessibility_info | escape }}">
          <div class="slide-{{ section.id }} slideshow multicolumn-list contains-content-container grid grid--{{ section.settings.columns_mobile }}-col grid--{{ columns_tablet_int }}-col-tablet grid--{{ columns_desktop_int }}-col-desktop{% if show_mobile_slider %} slider slider--mobile slider--tablet{% endif %} {% if show_desktop_slider %} slider slider--tablet-up{% endif %}{% if section.settings.grid_peek %} grid--peek{% endif %}"
            id="Slider-{{ section.id }}"
            aria-live="polite"
            aria-atomic="true"
            data-autoplay="{{ section.settings.auto_rotate }}"
            data-speed="{{ section.settings.change_slides_speed }}" 
          >
            {%- for column in (0..ColumnCount) -%}
              {%- assign empty_column = '' -%}
              {%- if columnImage == blank and columnTitle == blank and columnDescription == blank -%}
                {%- assign empty_column = ' multicolumn-list__item--empty' -%}
              {%- endif -%}

              <div id="Slide-{{ section.id }}-{{ forloop.index }}" 
                class="slideshow__slide{% if section.settings.title == 'opiniones-expertos' %} slide-two-columns{% endif %} multicolumn-list__item grid__item grid--1-col slider__slide{% if section.settings.swipe_on_mobile %} slider__slide{% endif %}{% if section.settings.column_alignment == 'center' %} center{% endif %}{{ empty_column }}" 
                {{ block.shopify_attributes }} 
                role="group" 
                aria-roledescription="{{ 'sections.slideshow.slide' | t }}" 
                aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}" 
                tabindex="-1"
              >
                <div class="multicolumn-card content-container">
                  {%- if columnImage -%}
                    {%- comment -%}MOD: Be levels - obtenemos la imagen como objeto a partir de la url  {%- endcomment -%}
                    {%- liquid
                      assign preImgName = columnImage[column] | split: "?" | first
                      assign imgName = preImgName | split: "/" | last 
                      assign preImgObj = images[imgName]
                      if preImgObj != blank
                        assign imgObj = preImgObj | image_url: width: 1420 | image_tag: loading: 'lazy', sizes: sizes, widths: '275, 550, 710, 1420', class: 'multicolumn-card__image', alt: columnTitle[column] | escape
                        assign highest_ratio = 0
                      else
                        assign imgObj = 'image' | placeholder_svg_tag: 'placeholder-svg'
                        assign highest_ratio = 1
                      endif
                    -%}
                    {%- comment -%}MOD: Be levels - obtenemos aspect_ratio a partir del objeto{%- endcomment -%}
                    {%- liquid                      
                      assign preImgRatio = preImgObj.aspect_ratio
                      if preImgRatio > highest_ratio
                        assign highest_ratio = preImgRatio
                      endif
                    -%}

                    {% if section.settings.image_ratio == 'adapt' or section.settings.image_ratio == 'circle' %}
                      {% assign spaced_image = true %}
                    {% endif %}
                    <div class="multicolumn-card__image-wrapper multicolumn-card__image-wrapper--{{ section.settings.image_width }}-width {% if section.settings.image_width != 'full' or spaced_image %} multicolumn-card-spacing{% endif %}">
                      <div class="media media--transparent media--{{ section.settings.image_ratio }}"
                        {% if section.settings.image_ratio == 'adapt' %}
                          style="padding-bottom: {{ 1 | divided_by: highest_ratio | times: 100 }}%;"
                        {% endif %}>
                        {%- capture sizes -%}(min-width: 990px) {% if totalSlides <= 2 %}710px{% else %}550px{% endif %}, (min-width: 750px) {% if totalSlides == 1 %}710px{% else %}550px{% endif %}, calc(100vw - 30px){%- endcapture -%}
                          {{ imgObj }}
                      </div>
                    </div>
                  {%- endif -%}
                  <div class="multicolumn-card__info">
                    {%- if columnTitle != blank -%}
                      <h3>{{ columnTitle[column] | escape }}</h3>
                    {%- endif -%}
                    {%- if columnSubTitle != blank -%}
                      <p class="image-with-text__text image-with-text__text--caption {{ section.settings.column_text_style }} {{ section.settings.column_text_style }}--{{ section.settings.column_text_size }} {{ section.settings.column_text_style }}" {{ block.shopify_attributes }}>
                        {{ columnSubTitle[column] }}
                      </p>
                  {%- endif -%}
                    {%- if columnDescription != blank -%}
                      <div class="rte description{% if section.settings.item_description_alignment == 'center' %} center{% else %} text-align--left{% endif %}">{{ columnDescription[column] }}</div>
                    {%- endif -%}
                  </div>
                </div>
              </div>
            {%- endfor -%}
          </div>
          
          {%- if totalSlides > totalSlidesDesktop -%}
            {%- if show_desktop_slider or show_mobile_slider -%}
              <div class="slideshow__controls slideshow__controls--top slider-buttons no-js-hidden {% if show_desktop_slider == false %}hidden-desktop {% endif %}{% if show_mobile_slider == false %}hidden-mobile {% endif %}{% if section.settings.slider_visual == 'arrows' %}slideshow__controls--arrows {% endif %}">
                <button type="button" class="slider-button slider-button--prev rotate-90" name="previous" aria-label="{{ 'sections.slideshow.previous_slideshow' | t }}" aria-controls="Slider-{{ section.id }}">{% render 'icon-arrow' %}</button>                
                <div class="slider-counter slider-counter--{{ section.settings.slider_visual }}{% if section.settings.slider_visual == 'counter' or section.settings.slider_visual == 'numbers' or section.settings.slider_visual == 'arrows' %} caption{% endif %} visually-hiddenx"> 
                  {%- if section.settings.slider_visual == 'counter' -%}
                    <span class="slider-counter--current">1</span>
                    <span aria-hidden="true"> / </span>
                    <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
                    <span class="slider-counter--total hidden">{{ columns_desktop_int }}</span>
                  {%- elsif section.settings.slider_visual == 'arrows' -%}
                    <div class='visually-hidden'>
                      <span aria-hidden="true" class="slider-counter--current">1</span>
                      <span aria-hidden="true"> / </span>
                      <span aria-hidden="true">{{ 'general.slider.of' | t }}</span>
                      <span aria-hidden="true" class="slider-counter--total">{{ columns_desktop_int }}</span>
                    </div>
                  {%- else-%}
                    <div class="slideshow__control-wrapper">
                      {%- for i in (1..totalSlides) -%} 
                        <button class="slider-counter__link slider-counter__link--{{ section.settings.slider_visual }} link" aria-label="{{ 'sections.slideshow.load_slide' | t }} {{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}" aria-controls="Slider-{{ section.id }}">
                          {%- if section.settings.slider_visual == 'numbers' -%}{{ forloop.index }}{% else %}<span class="dot"></span>{%- endif -%}
                        </button>
                      {%- endfor -%}
                    </div>
                  {%- endif -%}
                  <span aria-hidden="true" class="total-slides-desktop visually-hidden">{{ totalSlidesDesktop }}</span>
                </div>
                <button type="button" class="slider-button slider-button--next rotate-90" name="next" aria-label="{{ 'sections.slideshow.next_slideshow' | t }}" aria-controls="Slider-{{ section.id }}">{% render 'icon-arrow' %}</button>
                {%- if section.settings.auto_rotate -%}
                  <button type="button" class="slideshow__autoplay slider-button no-js-hidden visually-hiddenx{%- comment -%}{% if show_desktop_slider == false %} slideshow__autoplay--paused{% endif %}{%- endcomment -%}" aria-label="{{ 'sections.slideshow.pause_slideshow' | t }}">
                    {%- render 'icon-pause' -%}
                    {%- render 'icon-play' -%}                    
                  </button>
                {%- endif -%}
              </div>
              
              <noscript>
                <div class="slider-buttons">
                  <div class="slider-counter">
                    {%- for i in (1..totalSlides) -%}
                      <a href="#Slide-{{ section.id }}-{{ forloop.index }}" class="slider-counter__link link" aria-label="{{ 'sections.slideshow.load_slide' | t }} {{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}">
                        {{ forloop.index }}
                      </a>
                    {%- endfor -%}
                  </div>
                </div>
              </noscript>
              
            {%- endif -%}
          {%- endif -%}
        </carousel-component>
      {%- endif -%}
      <div class="center page-width">
        {%- if sectionButtonLabel != blank -%}
          {%- comment -%}
          <a class="button button--secondary"{% if section.settings.button_link == blank %} role="link" aria-disabled="true"{% else %} href="{{ section.settings.button_link }}"{% endif %}>
            {{ sectionButtonLabel | escape }}
          </a>
          {%- endcomment -%}
          <modal-opener
            class="product-popup-modal__opener no-js-hidden quick-add-hidden" 
            data-modal="#PopupModal-{{ section.id }}"
            {{ block.shopify_attributes }}
          >
            <button
              id="ProductPopup-{{ section.id }}"
              class="button button--secondary animate-arrow"
              type="button"
              aria-haspopup="dialog"
            >
              <span>{{ sectionButtonLabel | escape }}</span>
              <span class="icon-wrap">{% render 'icon-arrow' %}</span>
            </button>
          </modal-opener>
        {%- endif -%}
      </div>
    </div>
  </div>

  <!-- Start Popup -->
  {%- if sectionButtonLabel != '' -%}
    <modal-dialog id="PopupModal-{{ section.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
      <div
        role="dialog"
        aria-label="{{ sectionButtonLabel }}"
        aria-modal="true"
        class="product-popup-modal__content"
        tabindex="-1"
      >
        <button
          id="ModalClose-{{ section.id }}"
          type="button"
          class="product-popup-modal__toggle"
          aria-label="{{ 'accessibility.close' | t }}"
        >
          {% render 'icon-close' %}
        </button>

        <div class="product-popup-modal__content-info">
          {%- if section.settings.title == 'como-se-usa' -%}
            {%- if popupAnswer -%}
              <div class="modal-content">
                {{ popupAnswer }}
              </div>
            {%- endif -%}
            {%- if popupIncludes -%}
              <div class="modal-content">
                {{ popupIncludes }}
              </div>
            {%- endif -%}
            {%- if popupIndications -%}
              <div class="modal-content">
                {{ popupIndications }}
              </div>
            {%- endif -%}
          {%- endif -%}

          {%- if section.settings.title == 'ingredientes' -%}
            {%- for column in (0..popupColumnCount) -%}
              {% assign ingSecondaryTitle       = popupIngSecTitle[column] | strip %}
              {% assign ingSecondaryDescription = popupIngSecDesc[column] | strip %}

              <div class="modal-content">
                <h3 class="h2 font-body-bold">
                  {{ ingSecondaryTitle | escape }}
                </h3> 
                <p>{{ ingSecondaryDescription | escape }}</p>
              </div>
            {% endfor %}
          {%- endif -%}
        </div>

      </div>
    </modal-dialog>
  {%- endif -%}
  <!-- End Popup -->

{%- endif -%}

{% schema %}
{
  "name": "Be: Carousel multicolumna",
  "class": "section",
  "tag": "section",
  "settings": [
    {
      "type": "select",
      "id": "title",
      "options": [
        {
          "value": "seleccionar",
          "label": "Información a mostrar"
        },
        {
          "value": "como-se-usa",
          "label": "Cómo se usa"
        },
        {
          "value": "proceso-mejora",
          "label": "Proceso de mejora"
        },
        {
          "value": "beneficios",
          "label": "Beneficios"
        },
        {
          "value": "opiniones-expertos",
          "label": "Que dicen de nosotros"
        },
        {
          "value": "ingredientes",
          "label": "Ingredientes"
        }
      ],
      "default": "seleccionar",
      "label": "Información a mostrar"
    },
    {
      "type": "checkbox",
      "id": "show_title",
      "label": "Mostrar encabezado de sección",
      "default": false
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "checkbox",
      "id": "show_description",
      "label": "Mostrar descripción",
      "default": false
    },
    {
      "type": "select",
      "id": "description_style",
      "label": "t:sections.featured-collection.settings.description_style.label",
      "options": [
        {
          "value": "body",
          "label": "t:sections.featured-collection.settings.description_style.options__1.label"
        },
        {
          "value": "subtitle",
          "label": "t:sections.featured-collection.settings.description_style.options__2.label"
        },
        {
          "value": "uppercase",
          "label": "t:sections.featured-collection.settings.description_style.options__3.label"
        }
      ],
      "default": "body"
    },
    {
      "type": "select",
      "id": "title_wrapper_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
        }
      ],
      "default": "left",
      "label": "Alineación del título y la descripción"
    },
    {
      "type": "select",
      "id": "image_width",
      "options": [
        {
          "value": "fourth",
          "label": "Un cuarto de columna"
        },
        {
          "value": "third",
          "label": "t:sections.multicolumn.settings.image_width.options__1.label"
        },
        {
          "value": "half",
          "label": "t:sections.multicolumn.settings.image_width.options__2.label"
        },
        {
          "value": "full",
          "label": "t:sections.multicolumn.settings.image_width.options__3.label"
        }
      ],
      "default": "fourth",
      "label": "t:sections.multicolumn.settings.image_width.label"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.multicolumn.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.multicolumn.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.multicolumn.settings.image_ratio.options__3.label"
        },
        {
          "value": "circle",
          "label": "t:sections.multicolumn.settings.image_ratio.options__4.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.multicolumn.settings.image_ratio.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 1,
      "label": "t:sections.multicolumn.settings.columns_desktop.label"
    },
    {
      "type": "number",
      "id": "gap_desktop",
      "default": 0,
      "label": "Espacio entre columnas"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.multicolumn.settings.columns_mobile.label"
    },
    {
      "type": "select",
      "id": "column_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.multicolumn.settings.column_alignment.label"
    },
    {
      "type": "select",
      "id": "item_description_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
        }
      ],
      "default": "left",
      "label": "Alineación de la descripción de cada ítem"
    },
    {
      "type": "select",
      "id": "background_style",
      "options": [
        {
          "value": "none",
          "label": "t:sections.multicolumn.settings.background_style.options__1.label"
        },
        {
          "value": "primary",
          "label": "t:sections.multicolumn.settings.background_style.options__2.label"
        }
      ],
      "default": "primary",
      "label": "t:sections.multicolumn.settings.background_style.label"
    },
    {
      "type": "text",
      "id": "button_label",
      "default": "Button label",
      "label": "t:sections.multicolumn.settings.button_label.label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "t:sections.multicolumn.settings.button_link.label"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "accent-1",
          "label": "t:sections.all.colors.accent_1.label"
        },
        {
          "value": "accent-2",
          "label": "t:sections.all.colors.accent_2.label"
        },
        {
          "value": "background-1",
          "label": "t:sections.all.colors.background_1.label"
        },
        {
          "value": "background-2",
          "label": "t:sections.all.colors.background_2.label"
        },
        {
          "value": "inverse",
          "label": "t:sections.all.colors.inverse.label"
        }
      ],
      "default": "background-1",
      "label": "t:sections.all.colors.label"
    },
    {
      "type": "header",
      "content": "Configuración sliders"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "default": false,
      "label": "Activar en mobile"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_desktop",
      "default": false,
      "label": "Activar en desktop"
    },
    {
      "type": "checkbox",
      "id": "grid_peek",
      "default": false,
      "label": "Sugerir deslizamiento"
    },
    {
      "type": "checkbox",
      "id": "auto_rotate",
      "label": "t:sections.slideshow.settings.auto_rotate.label",
      "default": false
    },
    {
      "type": "range",
      "id": "change_slides_speed",
      "min": 2,
      "max": 10,
      "step": 0.5,
      "unit": "s",
      "label": "t:sections.slideshow.settings.change_slides_speed.label",
      "default": 3
    },
    {
      "type": "select",
      "id": "slider_visual",
      "options": [
        {
          "value": "arrows",
          "label": "Flechas"
        },
        {
          "value": "dots",
          "label": "t:sections.slideshow.settings.slider_visual.options__2.label"
        },
        {
          "value": "counter",
          "label": "t:sections.slideshow.settings.slider_visual.options__1.label"
        },
        {
          "value": "numbers",
          "label": "t:sections.slideshow.settings.slider_visual.options__3.label"
        }
      ],
      "default": "arrows",
      "label": "t:sections.slideshow.settings.slider_visual.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 52
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "presets": [
    {
      "name": "Be: Carousel multicolumna"
    }
  ]
}
{% endschema %}